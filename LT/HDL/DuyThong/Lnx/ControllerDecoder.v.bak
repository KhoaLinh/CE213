module ControllerDecoder(RESET, ENABLE, MUX, SEL, LOAD, VALID, CurrentState);
input [3:0]CurrentState;
output RESET, ENABLE, MUX, SEL, LOAD, VALID;

wire [1:0]MUX;
wire [8:0]SEL;
wire [6:0]LOAD;

// S0 =  ~ CurrentState[3] ~CurrentState[2] ~CurrentState[1] ~CurrentState[0]   0000
// S1 =  ~ CurrentState[3] ~CurrentState[2] ~CurrentState[1] CurrentState[0]    0001
// S2 =  ~ CurrentState[3] ~CurrentState[2] CurrentState[1] ~CurrentState[0]    0010
// S3 =  ~ CurrentState[3] ~CurrentState[2] CurrentState[1] CurrentState[0]     0011
// S4 =  ~ CurrentState[3] CurrentState[2] ~CurrentState[1] ~CurrentState[0]    0100
// S5 =  ~ CurrentState[3] CurrentState[2] ~CurrentState[1] CurrentState[0]     0101
// S6 =  ~ CurrentState[3] CurrentState[2] CurrentState[1] ~CurrentState[0]     0110
// S7 =  ~ CurrentState[3] CurrentState[2] CurrentState[1] CurrentState[0]      0111
// S8 =  CurrentState[3] ~CurrentState[2] ~CurrentState[1] ~CurrentState[0]     1000

// Enable = S7
assign ENABLE = ~CurrentState[3] & CurrentState[2] & CurrentState[1] & CurrentState[0];

// RESET = S1
assign RESET = ~CurrentState[3] & ~CurrentState[2] & ~CurrentState[1] & CurrentState[0];

// MUX0 = ~CurrentState[2]
assign MUX0 = ~CurrentState[2];

// MUX1 = CurrentState[0]
assign MUX1 = CurrentState[0];

// SEL0 = S3
assign SEL0 = ~CurrentState[3] & ~CurrentState[2] & CurrentState[1] & CurrentState[0];

// SEL1 = S5 + S6
assign SEL1 = ~CurrentState[3] & CurrentState[2] & ~CurrentState[1] & CurrentState[0] 
            | ~CurrentState[3] & CurrentState[2] & CurrentState[1] & ~CurrentState[0];

// SEL2 = S3
assign SEL2 = ~CurrentState[3] & ~CurrentState[2] & CurrentState[1] & CurrentState[0];

//SEL3 = S4
assign SEL3 = ~CurrentState[3] & CurrentState[2] & ~CurrentState[1] & ~CurrentState[0];

// SEL4 = S4
assign SEL4 = ~CurrentState[3] & CurrentState[2] & ~CurrentState[1] & ~CurrentState[0];

// SEL5 = S5
assign SEL5 = ~CurrentState[3] & CurrentState[2] & ~CurrentState[1] & CurrentState[0];

// SEL6 = S7
assign SEL6 = ~CurrentState[3] & CurrentState[2] & CurrentState[1] & CurrentState[0];

// SEL7 = S6
assign SEL7 = ~CurrentState[3] & CurrentState[2] & CurrentState[1] & ~CurrentState[0];

// SEL8 = S2
assign SEL8 = ~CurrentState[3] & ~CurrentState[2] & CurrentState[1] & ~CurrentState[0];

// LOAD0 = S3 + S5
assign LOAD0 = ~CurrentState[3] & ~CurrentState[2] & CurrentState[1] & CurrentState[0] 
             | ~CurrentState[3] & CurrentState[2] & ~CurrentState[1] & CurrentState[0];

// LOAD1 = S2
assign LOAD1 = ~CurrentState[3] & ~CurrentState[2] & CurrentState[1] & ~CurrentState[0];

// LOAD2 = S3
assign LOAD2 = ~CurrentState[3] & ~CurrentState[2] & CurrentState[1] & CurrentState[0];

// LOAD3 = S4
assign LOAD3 = ~CurrentState[3] & CurrentState[2] & ~CurrentState[1] & ~CurrentState[0];

// LOAD4 = S6
assign LOAD4 = ~CurrentState[3] & CurrentState[2] & CurrentState[1] & ~CurrentState[0];

// LOAD5 = S4 + S7
assign LOAD5 = ~CurrentState[3] & CurrentState[2] & ~CurrentState[1] & ~CurrentState[0] 
             | ~CurrentState[3] & CurrentState[2] & CurrentState[1] & CurrentState[0];

// LOAD6 = S4 + S5
assign LOAD6 = ~CurrentState[3] & CurrentState[2] & ~CurrentState[1] & ~CurrentState[0] 
             | ~CurrentState[3] & CurrentState[2] & ~CurrentState[1] & CurrentState[0];

// VALID = S8
assign VALID = CurrentState[3] & ~CurrentState[2] & ~CurrentState[1] & ~CurrentState[0];
endmodule

